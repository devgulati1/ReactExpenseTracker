{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\react-setup\\\\01-starting-setup\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  let fillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    fillHeight = Math.round(props.value / props.maxValue * 100) + \"%\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: fillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/react-setup/01-starting-setup/src/components/Chart/ChartBar.js"],"names":["ChartBar","props","fillHeight","maxValue","Math","round","value","height","label"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAEC,KAAD,IAAS;AACpB,MAAIC,UAAU,GAAC,IAAf;;AACA,MAAGD,KAAK,CAACE,QAAN,GAAe,CAAlB,EAAoB;AAChBD,IAAAA,UAAU,GAACE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAYL,KAAK,CAACE,QAAnB,GAA6B,GAAxC,IAA6C,GAAxD;AACH;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE;AAACI,UAAAA,MAAM,EAACL;AAAR;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAIH;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCD,KAAK,CAACO;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CAZD;;KAAMR,Q;AAaN,eAAeA,QAAf","sourcesContent":["const ChartBar=(props)=>{\r\n    let fillHeight=\"0%\";\r\n    if(props.maxValue>0){\r\n        fillHeight=Math.round((props.value/props.maxValue)*100)+\"%\"\r\n    }\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:fillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n\r\n    </div>\r\n}\r\nexport default ChartBar;"]},"metadata":{},"sourceType":"module"}